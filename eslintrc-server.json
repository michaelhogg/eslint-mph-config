{
  // @see eslint.org/docs/user-guide/configuring/plugins#specifying-parser
  // @see github.com/typescript-eslint/typescript-eslint/tree/v4.26.1/packages/parser#usage
  // @see github.com/typescript-eslint/typescript-eslint/tree/v4.26.1/docs/getting-started/linting#configuration
  "parser": "@typescript-eslint/parser",

  // @see eslint.org/docs/user-guide/configuring/language-options#specifying-parser-options
  "parserOptions": {
    "sourceType": "module",
    "project":    "./tsconfig.json"  // @see github.com/typescript-eslint/typescript-eslint/tree/v4.26.1/packages/parser#parseroptionsproject
  },

  // @see eslint.org/docs/user-guide/configuring/language-options#specifying-environments
  "env": {
    "es6":  true,
    "node": true
  },

  // @see eslint.org/docs/user-guide/configuring/plugins#configuring-plugins
  "plugins": [
    "@typescript-eslint"  // @see www.npmjs.com/package/@typescript-eslint/eslint-plugin
  ],

  // @see eslint.org/docs/user-guide/configuring/rules#configuring-rules
  "rules": {

    // @see eslint.org/docs/rules/#possible-errors
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L3

    "for-direction":                 ["error"],
    "getter-return":                 ["error", { "allowImplicit": false }],
    "no-async-promise-executor":     ["error"],
    "no-await-in-loop":              ["off"],
    "no-compare-neg-zero":           ["error"],
    "no-cond-assign":                ["error", "always"],
    "no-console":                    ["off"],
    "no-constant-condition":         ["error", { "checkLoops": true }],
    "no-control-regex":              ["error"],
    "no-debugger":                   ["warn"],
    "no-dupe-args":                  ["error"],
    "no-dupe-else-if":               ["error"],
    "no-dupe-keys":                  ["error"],
    "no-duplicate-case":             ["error"],
    "no-empty":                      ["error", { "allowEmptyCatch": false }],
    "no-empty-character-class":      ["error"],
    "no-ex-assign":                  ["error"],
    "no-extra-boolean-cast":         ["error", { "enforceForLogicalOperands": true }],
    "no-extra-parens":               ["off"],  // Replaced by "@typescript-eslint/no-extra-parens"
    "no-extra-semi":                 ["off"],  // Replaced by "@typescript-eslint/no-extra-semi"
    "no-func-assign":                ["error"],
    "no-import-assign":              ["error"],
    "no-inner-declarations":         ["error", "both"],
    "no-invalid-regexp":             ["error"],
    "no-irregular-whitespace":       ["error", {
                                       "skipStrings":   false,
                                       "skipComments":  false,
                                       "skipRegExps":   false,
                                       "skipTemplates": false
                                     }],
    "no-loss-of-precision":          ["off"],  // Replaced by "@typescript-eslint/no-loss-of-precision"
    "no-misleading-character-class": ["error"],
    "no-obj-calls":                  ["error"],
    "no-promise-executor-return":    ["error"],
    "no-prototype-builtins":         ["error"],
    "no-regex-spaces":               ["error"],
    "no-setter-return":              ["error"],
    "no-sparse-arrays":              ["error"],
    "no-template-curly-in-string":   ["error"],
    "no-unexpected-multiline":       ["error"],
    "no-unreachable":                ["error"],
    "no-unreachable-loop":           ["error"],
    "no-unsafe-finally":             ["error"],
    "no-unsafe-negation":            ["error", { "enforceForOrderingRelations": true }],
    "no-unsafe-optional-chaining":   ["error", { "disallowArithmeticOperators": true }],
    "no-useless-backreference":      ["error"],
    "require-atomic-updates":        ["error"],
    "use-isnan":                     ["error", {
                                       "enforceForSwitchCase": true,
                                       "enforceForIndexOf":    true
                                     }],
    "valid-typeof":                  ["error", { "requireStringLiterals": true }],


    // @see eslint.org/docs/rules/#best-practices
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L194

    "accessor-pairs":               ["error"],
    "array-callback-return":        ["error", {
                                      "allowImplicit": false,
                                      "checkForEach":  true
                                    }],
    "block-scoped-var":             ["error"],
    "class-methods-use-this":       ["error"],
    "complexity":                   ["error", { "max": 8 }],
    "consistent-return":            ["error"],
    "curly":                        ["error", "all"],
    "default-case":                 ["error"],
    "default-case-last":            ["error"],
    "default-param-last":           ["off"],    // Replaced by "@typescript-eslint/default-param-last"
    "dot-location":                 ["error", "property"],
    "dot-notation":                 ["off"],    // Replaced by "@typescript-eslint/dot-notation"
    "eqeqeq":                       ["error", "always"],
    "grouped-accessor-pairs":       ["error"],
    "guard-for-in":                 ["error"],
    "max-classes-per-file":         ["off"],
    "no-alert":                     ["error"],
    "no-caller":                    ["error"],
    "no-case-declarations":         ["error"],
    "no-constructor-return":        ["error"],
    "no-div-regex":                 ["error"],
    "no-else-return":               ["error", { "allowElseIf": true }],
    "no-empty-function":            ["off"],    // Replaced by "@typescript-eslint/no-empty-function"
    "no-empty-pattern":             ["error"],
    "no-eq-null":                   ["error"],
    "no-eval":                      ["error", { "allowIndirect": false }],
    "no-extend-native":             ["error"],
    "no-extra-bind":                ["error"],
    "no-extra-label":               ["error"],
    "no-fallthrough":               ["error"],
    "no-floating-decimal":          ["error"],
    "no-global-assign":             ["error"],
    "no-implicit-coercion":         ["error", {
                                      "boolean":                   true,
                                      "number":                    true,
                                      "string":                    true,
                                      "disallowTemplateShorthand": true
                                    }],
    "no-implicit-globals":          ["error", { "lexicalBindings": true }],
    "no-implied-eval":              ["error"],  // Also see    "@typescript-eslint/no-implied-eval"
    "no-invalid-this":              ["off"],    // Replaced by "@typescript-eslint/no-invalid-this"
    "no-iterator":                  ["error"],
    "no-labels":                    ["error"],
    "no-lone-blocks":               ["error"],
    "no-loop-func":                 ["off"],    // Replaced by "@typescript-eslint/no-loop-func"
    "no-magic-numbers":             ["off"],    // Replaced by "@typescript-eslint/no-magic-numbers"
    "no-multi-spaces":              ["off"],
    "no-multi-str":                 ["error"],
    "no-new":                       ["error"],
    "no-new-func":                  ["error"],
    "no-new-wrappers":              ["error"],
    "no-nonoctal-decimal-escape":   ["error"],
    "no-octal":                     ["error"],
    "no-octal-escape":              ["error"],
    "no-param-reassign":            ["error", { "props": false }],
    "no-proto":                     ["error"],
    "no-redeclare":                 ["off"],    // Replaced by "@typescript-eslint/no-redeclare"
    "no-restricted-properties":     ["off"],
    "no-return-assign":             ["error", "always"],
    "no-return-await":              ["off"],    // Replaced by "@typescript-eslint/return-await"
    "no-script-url":                ["error"],
    "no-self-assign":               ["error", { "props": true }],
    "no-self-compare":              ["error"],
    "no-sequences":                 ["error", { "allowInParentheses": false }],
    "no-throw-literal":             ["error"],  // Also see "@typescript-eslint/no-throw-literal"
    "no-unmodified-loop-condition": ["error"],
    "no-unused-expressions":        ["off"],    // Replaced by "@typescript-eslint/no-unused-expressions"
    "no-unused-labels":             ["error"],
    "no-useless-call":              ["error"],
    "no-useless-catch":             ["error"],
    "no-useless-concat":            ["error"],
    "no-useless-escape":            ["error"],
    "no-useless-return":            ["error"],
    "no-void":                      ["error", { "allowAsStatement": true }],  // Also see the "ignoreVoid" option of "@typescript-eslint/no-floating-promises"
    "no-warning-comments":          ["off"],
    "no-with":                      ["error"],
    "prefer-named-capture-group":   ["off"],
    "prefer-promise-reject-errors": ["error", { "allowEmptyReject": false }],
    "prefer-regex-literals":        ["error", { "disallowRedundantWrapping": true }],
    "radix":                        ["error", "always"],
    "require-await":                ["off"],    // Replaced by "@typescript-eslint/require-await"
    "require-unicode-regexp":       ["off"],
    "vars-on-top":                  ["error"],
    "wrap-iife":                    ["error", "inside", { "functionPrototypeMethods": true }],
    "yoda":                         ["error", "never"],


    // @see eslint.org/docs/rules/#strict-mode
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L529

    "strict": ["error", "safe"],


    // @see eslint.org/docs/rules/#variables
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L536

    "init-declarations":          ["off"],  // Replaced by "@typescript-eslint/init-declarations"
    "no-delete-var":              ["error"],
    "no-label-var":               ["error"],
    "no-restricted-globals":      ["off"],
    "no-shadow":                  ["off"],  // Replaced by "@typescript-eslint/no-shadow"
    "no-shadow-restricted-names": ["error"],
    "no-undef":                   ["off"],  // @see github.com/typescript-eslint/typescript-eslint/blob/v4.26.1/docs/getting-started/linting/FAQ.md#i-get-errors-from-the-no-undef-rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors
    "no-undef-init":              ["error"],
    "no-undefined":               ["off"],
    "no-unused-vars":             ["off"],  // Replaced by "@typescript-eslint/no-unused-vars"
    "no-use-before-define":       ["off"],  // Replaced by "@typescript-eslint/no-use-before-define"


    // @see eslint.org/docs/rules/#stylistic-issues
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L589

    "array-bracket-newline":            ["error", "consistent"],
    "array-bracket-spacing":            ["error", "never", {
                                          "singleValue":     false,
                                          "objectsInArrays": false,
                                          "arraysInArrays":  false
                                        }],
    "array-element-newline":            ["off"],
    "block-spacing":                    ["error", "always"],
    "brace-style":                      ["off"],  // Replaced by "@typescript-eslint/brace-style"
    "camelcase":                        ["error", {
                                          "properties":          "always",
                                          "ignoreDestructuring": false,
                                          "ignoreImports":       false,
                                          "ignoreGlobals":       false
                                        }],
    "capitalized-comments":             ["off"],
    "comma-dangle":                     ["off"],  // Replaced by "@typescript-eslint/comma-dangle"
    "comma-spacing":                    ["off"],  // Replaced by "@typescript-eslint/comma-spacing"
    "comma-style":                      ["error", "last"],
    "computed-property-spacing":        ["error", "never", { "enforceForClassMembers": true }],
    "consistent-this":                  ["error", "context"],
    "eol-last":                         ["error", "always"],
    "func-call-spacing":                ["off"],  // Replaced by "@typescript-eslint/func-call-spacing"
    "func-name-matching":               ["off"],
    "func-names":                       ["off"],
    "func-style":                       ["off"],
    "function-call-argument-newline":   ["off"],
    "function-paren-newline":           ["error", "consistent"],
    "id-denylist":                      ["off"],
    "id-length":                        ["error", {
                                          "min":        1,
                                          "max":        30,
                                          "properties": "always"
                                        }],
    "id-match":                         ["off"],
    "implicit-arrow-linebreak":         ["off"],
    "indent":                           ["off"],  // Replaced by "@typescript-eslint/indent"
    "jsx-quotes":                       ["error", "prefer-double"],
    "key-spacing":                      ["error", {
                                          "beforeColon": false,
                                          "afterColon":  true,
                                          "mode":        "minimum"
                                        }],
    "keyword-spacing":                  ["off"],  // Replaced by "@typescript-eslint/keyword-spacing"
    "line-comment-position":            ["off"],
    "linebreak-style":                  ["error", "unix"],
    "lines-around-comment":             ["off"],
    "lines-between-class-members":      ["off"],  // Replaced by "@typescript-eslint/lines-between-class-members"
    "max-depth":                        ["error", 6],
    "max-len":                          ["error", {
                                          "code":          120,
                                          "ignorePattern": "@see"  // For long URLs in JSDoc comments
                                        }],
    "max-lines":                        ["warn", { "max": 500, "skipBlankLines": false, "skipComments": false }],
    "max-lines-per-function":           ["warn", { "max": 100, "skipBlankLines": false, "skipComments": false, "IIFEs": true }],
    "max-nested-callbacks":             ["error", 2],
    "max-params":                       ["error", 4],
    "max-statements":                   ["error", 25, { "ignoreTopLevelFunctions": false }],
    "max-statements-per-line":          ["error", { "max": 2 }],
    "multiline-comment-style":          ["off"],
    "multiline-ternary":                ["off"],
    "new-cap":                          ["error", {
                                          "newIsCap":   true,
                                          "capIsNew":   false,
                                          "properties": true
                                        }],
    "new-parens":                       ["error", "always"],
    "newline-per-chained-call":         ["off"],
    "no-array-constructor":             ["off"],  // Replaced by "@typescript-eslint/no-array-constructor"
    "no-bitwise":                       ["error"],
    "no-continue":                      ["off"],
    "no-inline-comments":               ["off"],
    "no-lonely-if":                     ["error"],
    "no-mixed-operators":               ["error", { "allowSamePrecedence": false }],
    "no-mixed-spaces-and-tabs":         ["error"],
    "no-multi-assign":                  ["error"],
    "no-multiple-empty-lines":          ["error", {
                                          "max":    2,
                                          "maxBOF": 0,
                                          "maxEOF": 0
                                        }],
    "no-negated-condition":             ["error"],
    "no-nested-ternary":                ["off"],
    "no-new-object":                    ["error"],
    "no-plusplus":                      ["off"],
    "no-restricted-syntax":             ["off"],
    "no-tabs":                          ["error", { "allowIndentationTabs": false }],
    "no-ternary":                       ["off"],
    "no-trailing-spaces":               ["error", {
                                          "skipBlankLines": false,
                                          "ignoreComments": false
                                        }],
    "no-underscore-dangle":             ["error", {
                                          "allowAfterThis":            false,
                                          "allowAfterSuper":           false,
                                          "allowAfterThisConstructor": false,
                                          "enforceInMethodNames":      true,
                                          "allowFunctionParams":       false
                                        }],
    "no-unneeded-ternary":              ["error", { "defaultAssignment": false }],
    "no-whitespace-before-property":    ["error"],
    "nonblock-statement-body-position": ["off"],
    "object-curly-newline":             ["error", { "consistent": true }],
    "object-curly-spacing":             ["off"],  // Replaced by "@typescript-eslint/object-curly-spacing"
    "object-property-newline":          ["error", { "allowAllPropertiesOnSameLine": true }],
    "one-var":                          ["off"],
    "one-var-declaration-per-line":     ["off"],
    "operator-assignment":              ["error", "always"],
    "operator-linebreak":               ["off"],
    "padded-blocks":                    ["off"],
    "padding-line-between-statements":  ["off"],
    "prefer-exponentiation-operator":   ["off"],
    "prefer-object-spread":             ["error"],
    "quote-props":                      ["error", "as-needed", {
                                          "keywords":    false,
                                          "unnecessary": false,
                                          "numbers":     true
                                        }],
    "quotes":                           ["off"],  // Replaced by "@typescript-eslint/quotes"
    "semi":                             ["off"],  // Replaced by "@typescript-eslint/semi"
    "semi-spacing":                     ["error", {
                                          "before": false,
                                          "after":  true
                                        }],
    "semi-style":                       ["error", "last"],
    "sort-keys":                        ["off"],
    "sort-vars":                        ["off"],
    "space-before-blocks":              ["error", "always"],
    "space-before-function-paren":      ["off"],  // Replaced by "@typescript-eslint/space-before-function-paren"
    "space-in-parens":                  ["error", "never"],
    "space-infix-ops":                  ["off"],  // Replaced by "@typescript-eslint/space-infix-ops"
    "space-unary-ops":                  ["error", {
                                          "words":    true,
                                          "nonwords": false
                                        }],
    "spaced-comment":                   ["off"],
    "switch-colon-spacing":             ["error", {
                                          "before": false,
                                          "after":  true
                                        }],
    "template-tag-spacing":             ["error", "never"],
    "unicode-bom":                      ["error", "never"],
    "wrap-regex":                       ["off"],


    // @see eslint.org/docs/rules/#ecmascript-6
    // @see github.com/eslint/website/blob/v7.28.0/_data/rules.yml#L986

    "arrow-body-style":        ["error", "as-needed", { "requireReturnForObjectLiteral": false }],
    "arrow-parens":            ["error", "always"],
    "arrow-spacing":           ["error", {
                                 "before": true,
                                 "after":  true
                               }],
    "constructor-super":       ["error"],
    "generator-star-spacing":  ["error", {
                                 "before": false,
                                 "after":  true
                               }],
    "no-class-assign":         ["error"],
    "no-confusing-arrow":      ["error", { "allowParens": true }],
    "no-const-assign":         ["error"],
    "no-dupe-class-members":   ["off"],  // Replaced by "@typescript-eslint/no-dupe-class-members"
    "no-duplicate-imports":    ["off"],  // Replaced by "@typescript-eslint/no-duplicate-imports"
    "no-new-symbol":           ["error"],
    "no-restricted-exports":   ["off"],
    "no-restricted-imports":   ["off"],
    "no-this-before-super":    ["error"],
    "no-useless-computed-key": ["error", { "enforceForClassMembers": true }],
    "no-useless-constructor":  ["off"],  // Replaced by "@typescript-eslint/no-useless-constructor"
    "no-useless-rename":       ["error", {
                                 "ignoreDestructuring": false,
                                 "ignoreImport":        false,
                                 "ignoreExport":        false
                               }],
    "no-var":                  ["error"],
    "object-shorthand":        ["error", "always", {
                                 "avoidQuotes":               true,
                                 "ignoreConstructors":        false,
                                 "avoidExplicitReturnArrows": true
                               }],
    "prefer-arrow-callback":   ["error", {
                                 "allowNamedFunctions": false,
                                 "allowUnboundThis":    false
                               }],
    "prefer-const":            ["error", {
                                 "destructuring":          "all",
                                 "ignoreReadBeforeAssign": false
                               }],
    "prefer-destructuring":    ["off"],
    "prefer-numeric-literals": ["error"],
    "prefer-rest-params":      ["error"],
    "prefer-spread":           ["error"],
    "prefer-template":         ["off"],
    "require-yield":           ["error"],
    "rest-spread-spacing":     ["error", "never"],
    "sort-imports":            ["off"],
    "symbol-description":      ["error"],
    "template-curly-spacing":  ["error", "never"],
    "yield-star-spacing":      ["error", {
                                 "before": false,
                                 "after":  true
                               }],


    // @see github.com/typescript-eslint/typescript-eslint/tree/v4.26.1/packages/eslint-plugin#supported-rules

    "@typescript-eslint/adjacent-overload-signatures":           ["error"],
    "@typescript-eslint/array-type":                             ["off"],
    "@typescript-eslint/await-thenable":                         ["error"],
    "@typescript-eslint/ban-ts-comment":                         ["error", {
                                                                   "ts-expect-error":          "allow-with-description",
                                                                   "ts-ignore":                "allow-with-description",
                                                                   "ts-nocheck":               "allow-with-description",
                                                                   "ts-check":                 "allow-with-description",
                                                                   "minimumDescriptionLength": 10
                                                                 }],
    "@typescript-eslint/ban-tslint-comment":                     ["off"],
    "@typescript-eslint/ban-types":                              ["error"],  // The default options are used
    "@typescript-eslint/class-literal-property-style":           ["error", "fields"],
    "@typescript-eslint/consistent-indexed-object-style":        ["off"],
    "@typescript-eslint/consistent-type-assertions":             ["error", {
                                                                   "assertionStyle":              "as",
                                                                   "objectLiteralTypeAssertions": "allow"
                                                                 }],
    "@typescript-eslint/consistent-type-definitions":            ["error", "interface"],
    "@typescript-eslint/consistent-type-imports":                ["error", {
                                                                   "prefer":                  "no-type-imports",
                                                                   "disallowTypeAnnotations": true
                                                                 }],
    "@typescript-eslint/explicit-function-return-type":          ["error", {
                                                                   "allowExpressions":                                     false,
                                                                   "allowTypedFunctionExpressions":                        false,
                                                                   "allowHigherOrderFunctions":                            false,
                                                                   "allowDirectConstAssertionInArrowFunctions":            false,
                                                                   "allowConciseArrowFunctionExpressionsStartingWithVoid": false
                                                                 }],
    "@typescript-eslint/explicit-member-accessibility":          ["error", { "accessibility": "explicit" }],
    "@typescript-eslint/explicit-module-boundary-types":         ["error", {
                                                                   "allowArgumentsExplicitlyTypedAsAny":        false,
                                                                   "allowDirectConstAssertionInArrowFunctions": false,
                                                                   "allowHigherOrderFunctions":                 false,
                                                                   "allowTypedFunctionExpressions":             false
                                                                 }],
    "@typescript-eslint/member-delimiter-style":                 ["error", {
                                                                   "multiline":  { "delimiter": "comma", "requireLast": false },
                                                                   "singleline": { "delimiter": "comma", "requireLast": false }
                                                                 }],
    "@typescript-eslint/member-ordering":                        ["off"],
    "@typescript-eslint/method-signature-style":                 ["error", "property"],
    "@typescript-eslint/naming-convention":                      ["off"],
    "@typescript-eslint/no-base-to-string":                      ["error"],
    "@typescript-eslint/no-confusing-non-null-assertion":        ["error"],
    "@typescript-eslint/no-confusing-void-expression":           ["error", {
                                                                   "ignoreArrowShorthand": false,
                                                                   "ignoreVoidOperator":   false
                                                                 }],
    "@typescript-eslint/no-dynamic-delete":                      ["error"],
    "@typescript-eslint/no-empty-interface":                     ["off"],
    "@typescript-eslint/no-explicit-any":                        ["error", { "ignoreRestArgs":     false }],
    "@typescript-eslint/no-extra-non-null-assertion":            ["error"],
    "@typescript-eslint/no-extraneous-class":                    ["error", {
                                                                   "allowConstructorOnly": false,
                                                                   "allowEmpty":           false,
                                                                   "allowStaticOnly":      false,
                                                                   "allowWithDecorator":   false
                                                                 }],
    "@typescript-eslint/no-floating-promises":                   ["error", {
                                                                   "ignoreVoid": true,
                                                                   "ignoreIIFE": false
                                                                 }],
    "@typescript-eslint/no-for-in-array":                        ["error"],
    "@typescript-eslint/no-implicit-any-catch":                  ["error", { "allowExplicitAny": false }],
    "@typescript-eslint/no-implied-eval":                        ["error"],  // Also see "no-implied-eval"
    "@typescript-eslint/no-inferrable-types":                    ["off"],
    "@typescript-eslint/no-invalid-void-type":                   ["error", { "allowInGenericTypeArguments": ["Promise"] }],
    "@typescript-eslint/no-misused-new":                         ["error"],
    "@typescript-eslint/no-misused-promises":                    ["error", {
                                                                   "checksVoidReturn":   true,
                                                                   "checksConditionals": true
                                                                 }],
    "@typescript-eslint/no-namespace":                           ["error"],
    "@typescript-eslint/no-non-null-asserted-optional-chain":    ["error"],
    "@typescript-eslint/no-non-null-assertion":                  ["error"],
    "@typescript-eslint/no-parameter-properties":                ["error"],
    "@typescript-eslint/no-require-imports":                     ["error"],
    "@typescript-eslint/no-this-alias":                          ["error", { "allowDestructuring": false }],
    "@typescript-eslint/no-throw-literal":                       ["error"],  // Also see "no-throw-literal"
    "@typescript-eslint/no-type-alias":                          ["off"],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error", {
                                                                   "allowComparingNullableBooleansToTrue":  true,
                                                                   "allowComparingNullableBooleansToFalse": true
                                                                 }],
    "@typescript-eslint/no-unnecessary-condition":               ["error", {
                                                                   "allowConstantLoopConditions":                            true,
                                                                   "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
                                                                 }],
    "@typescript-eslint/no-unnecessary-qualifier":               ["error"],
    "@typescript-eslint/no-unnecessary-type-arguments":          ["error"],
    "@typescript-eslint/no-unnecessary-type-assertion":          ["error"],
    "@typescript-eslint/no-unnecessary-type-constraint":         ["error"],
    "@typescript-eslint/no-unsafe-argument":                     ["error"],
    "@typescript-eslint/no-unsafe-assignment":                   ["error"],
    "@typescript-eslint/no-unsafe-call":                         ["error"],
    "@typescript-eslint/no-unsafe-member-access":                ["error"],
    "@typescript-eslint/no-unsafe-return":                       ["error"],
    "@typescript-eslint/no-unused-vars-experimental":            ["off"],
    "@typescript-eslint/no-var-requires":                        ["error"],
    "@typescript-eslint/non-nullable-type-assertion-style":      ["off"],
    "@typescript-eslint/prefer-as-const":                        ["error"],
    "@typescript-eslint/prefer-enum-initializers":               ["error"],
    "@typescript-eslint/prefer-for-of":                          ["error"],
    "@typescript-eslint/prefer-function-type":                   ["error"],
    "@typescript-eslint/prefer-includes":                        ["error"],
    "@typescript-eslint/prefer-literal-enum-member":             ["error"],
    "@typescript-eslint/prefer-namespace-keyword":               ["error"],
    "@typescript-eslint/prefer-nullish-coalescing":              ["error", {
                                                                   "ignoreConditionalTests":        true,
                                                                   "ignoreMixedLogicalExpressions": false
                                                                 }],
    "@typescript-eslint/prefer-optional-chain":                  ["error"],
    "@typescript-eslint/prefer-readonly":                        ["error", { "onlyInlineLambdas": false }],
    "@typescript-eslint/prefer-readonly-parameter-types":        ["off"],
    "@typescript-eslint/prefer-reduce-type-parameter":           ["error"],
    "@typescript-eslint/prefer-regexp-exec":                     ["off"],
    "@typescript-eslint/prefer-string-starts-ends-with":         ["error"],
    "@typescript-eslint/prefer-ts-expect-error":                 ["error"],
    "@typescript-eslint/promise-function-async":                 ["error", {
                                                                   "allowAny":                  false,
                                                                   "allowedPromiseNames":       [],
                                                                   "checkArrowFunctions":       true,
                                                                   "checkFunctionDeclarations": true,
                                                                   "checkFunctionExpressions":  true,
                                                                   "checkMethodDeclarations":   true
                                                                 }],
    "@typescript-eslint/require-array-sort-compare":             ["error", { "ignoreStringArrays": true }],
    "@typescript-eslint/restrict-plus-operands":                 ["off"],
    "@typescript-eslint/restrict-template-expressions":          ["error", {
                                                                   "allowNumber":  true,
                                                                   "allowBoolean": true,
                                                                   "allowAny":     false,
                                                                   "allowNullish": true
                                                                 }],
    "@typescript-eslint/sort-type-union-intersection-members":   ["off"],
    "@typescript-eslint/strict-boolean-expressions":             ["error", {
                                                                   "allowString":                                            true,
                                                                   "allowNumber":                                            false,
                                                                   "allowNullableObject":                                    true,
                                                                   "allowNullableBoolean":                                   false,
                                                                   "allowNullableString":                                    true,
                                                                   "allowNullableNumber":                                    false,
                                                                   "allowAny":                                               false,
                                                                   "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
                                                                 }],
    "@typescript-eslint/switch-exhaustiveness-check":            ["error"],
    "@typescript-eslint/triple-slash-reference":                 ["error", {
                                                                   "path":  "never",
                                                                   "types": "never",
                                                                   "lib":   "never"
                                                                 }],
    "@typescript-eslint/type-annotation-spacing":                ["error", {
                                                                   "before":    false,
                                                                   "after":     true,
                                                                   "overrides": {
                                                                     "colon":      { "before": false, "after": true },
                                                                     "arrow":      { "before": true,  "after": true },
                                                                     "variable":   { "before": false, "after": true },
                                                                     "parameter":  { "before": false, "after": true },
                                                                     "property":   { "before": false, "after": true },
                                                                     "returnType": { "before": false, "after": true }
                                                                   }
                                                                 }],
    "@typescript-eslint/typedef":                                ["error", {
                                                                   "arrayDestructuring":                false,
                                                                   "arrowParameter":                    true,
                                                                   "memberVariableDeclaration":         true,
                                                                   "objectDestructuring":               true,
                                                                   "parameter":                         true,
                                                                   "propertyDeclaration":               true,
                                                                   "variableDeclaration":               true,
                                                                   "variableDeclarationIgnoreFunction": true
                                                                 }],
    "@typescript-eslint/unbound-method":                         ["error", { "ignoreStatic": false }],
    "@typescript-eslint/unified-signatures":                     ["error"],


    // @see github.com/typescript-eslint/typescript-eslint/tree/v4.26.1/packages/eslint-plugin#extension-rules

    "@typescript-eslint/brace-style":                 ["error", "1tbs", { "allowSingleLine": true }],
    "@typescript-eslint/comma-dangle":                ["error", "never"],
    "@typescript-eslint/comma-spacing":               ["error", {
                                                        "before": false,
                                                        "after":  true
                                                      }],
    "@typescript-eslint/default-param-last":          ["error"],
    "@typescript-eslint/dot-notation":                ["error", {
                                                        "allowKeywords":                     true,
                                                        "allowPattern":                      "^_.*$",  // Allow square-bracket access for property names beginning with an underscore, to avoid triggering the "no-underscore-dangle" rule with dot-notation access.
                                                        "allowPrivateClassPropertyAccess":   false,
                                                        "allowProtectedClassPropertyAccess": false,
                                                        "allowIndexSignaturePropertyAccess": false
                                                      }],
    "@typescript-eslint/func-call-spacing":           ["error", "never"],
    "@typescript-eslint/indent":                      ["error", 2, {
                                                        "SwitchCase":               1,
                                                        "VariableDeclarator":       1,
                                                        "outerIIFEBody":            1,
                                                        "MemberExpression":         1,
                                                        "FunctionDeclaration":      { "parameters": 1, "body": 1 },
                                                        "FunctionExpression":       { "parameters": 1, "body": 1 },
                                                        "CallExpression":           { "arguments": 1 },
                                                        "ArrayExpression":          1,
                                                        "ObjectExpression":         1,
                                                        "ImportDeclaration":        1,
                                                        "flatTernaryExpressions":   false,
                                                        "offsetTernaryExpressions": true,
                                                        "ignoreComments":           false,
                                                        "ignoredNodes": [  // @see eslint.org/docs/developer-guide/selectors
                                                          "TSUnionType"    // Ignore multi-line TypeScript unions.
                                                        ]
                                                      }],
    "@typescript-eslint/init-declarations":           ["error", "always"],
    "@typescript-eslint/keyword-spacing":             ["error", {
                                                        "before": true,
                                                        "after":  true
                                                      }],
    "@typescript-eslint/lines-between-class-members": ["error", "always", {
                                                        "exceptAfterSingleLine": true,
                                                        "exceptAfterOverload":   false
                                                      }],
    "@typescript-eslint/no-array-constructor":        ["error"],
    "@typescript-eslint/no-dupe-class-members":       ["error"],
    "@typescript-eslint/no-duplicate-imports":        ["error", { "includeExports": true }],
    "@typescript-eslint/no-empty-function":           ["error"],
    "@typescript-eslint/no-extra-parens":             ["off"],
    "@typescript-eslint/no-extra-semi":               ["error"],
    "@typescript-eslint/no-invalid-this":             ["error"],
    "@typescript-eslint/no-loop-func":                ["error"],
    "@typescript-eslint/no-loss-of-precision":        ["error"],
    "@typescript-eslint/no-magic-numbers":            ["off"],
    "@typescript-eslint/no-redeclare":                ["error", {
                                                        "builtinGlobals":         true,
                                                        "ignoreDeclarationMerge": false
                                                      }],
    "@typescript-eslint/no-shadow":                   ["error", {
                                                        "builtinGlobals":                             true,
                                                        "hoist":                                      "all",
                                                        "ignoreTypeValueShadow":                      false,
                                                        "ignoreFunctionTypeParameterNameValueShadow": false
                                                      }],
    "@typescript-eslint/no-unused-expressions":       ["error", {
                                                        "allowShortCircuit":    true,
                                                        "allowTernary":         true,
                                                        "allowTaggedTemplates": true,
                                                        "enforceForJSX":        true
                                                      }],
    "@typescript-eslint/no-unused-vars":              ["error", {
                                                        "vars":               "all",
                                                        "args":               "none",
                                                        "ignoreRestSiblings": true,
                                                        "caughtErrors":       "none"
                                                      }],
    "@typescript-eslint/no-use-before-define":        ["error", {
                                                        "functions":            false,
                                                        "classes":              true,
                                                        "variables":            true,
                                                        "enums":                true,
                                                        "typedefs":             true,
                                                        "ignoreTypeReferences": true
                                                      }],
    "@typescript-eslint/no-useless-constructor":      ["error"],
    "@typescript-eslint/object-curly-spacing":        ["error", "always"],
    "@typescript-eslint/quotes":                      ["error", "single", {
                                                        "avoidEscape":           true,
                                                        "allowTemplateLiterals": false
                                                      }],
    "@typescript-eslint/require-await":               ["error"],
    "@typescript-eslint/return-await":                ["error", "never"],  // Replacement for "no-return-await"
    "@typescript-eslint/semi":                        ["error", "always", { "omitLastInOneLineBlock": false }],
    "@typescript-eslint/space-before-function-paren": ["error", {
                                                        "anonymous":  "always",
                                                        "named":      "never",
                                                        "asyncArrow": "always"
                                                      }],
    "@typescript-eslint/space-infix-ops":             ["error"]

  }
}
